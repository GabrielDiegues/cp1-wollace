[
  {
    "id": 1,
    "title": "Clean Code",
    "author": "Robert C. Martin",
    "synopsis": "A guide to writing readable, maintainable, and efficient code. Covers best practices, code smells, and refactoring techniques essential for professional software development.",
    "borrowed": false
  },
  {
    "id": 2,
    "title": "Introduction to Algorithms",
    "author": "Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, Clifford Stein",
    "synopsis": "Comprehensive textbook covering a wide range of algorithms in depth, from basic sorting and searching to advanced topics like graph algorithms and NP-completeness.",
    "borrowed": false
  },
  {
    "id": 3,
    "title": "The Pragmatic Programmer",
    "author": "Andrew Hunt, David Thomas",
    "synopsis": "Offers practical advice and philosophies for developers to improve coding practices, productivity, and problem-solving skills across all stages of software development.",
    "borrowed": false
  },
  {
    "id": 4,
    "title": "Design Patterns: Elements of Reusable Object-Oriented Software",
    "author": "Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides",
    "synopsis": "Introduces 23 classic software design patterns and explains how to use them to create flexible, reusable, and maintainable object-oriented software.",
    "borrowed": false
  },
  {
    "id": 5,
    "title": "Artificial Intelligence: A Modern Approach",
    "author": "Stuart Russell, Peter Norvig",
    "synopsis": "A foundational textbook on AI covering search algorithms, knowledge representation, planning, machine learning, and robotics, widely used in computer science courses worldwide.",
    "borrowed": false
  },
  {
    "id": 6,
    "title": "Structure and Interpretation of Computer Programs",
    "author": "Harold Abelson, Gerald Jay Sussman",
    "synopsis": "Explores the core concepts of programming languages and software engineering using Scheme. Focuses on abstraction, modularity, and recursion in software design.",
    "borrowed": false
  },
  {
    "id": 7,
    "title": "Code: The Hidden Language of Computer Hardware and Software",
    "author": "Charles Petzold",
    "synopsis": "Explains how computers work at a fundamental level, from electrical circuits to operating systems, making complex concepts accessible to both programmers and enthusiasts.",
    "borrowed": false
  },
  {
    "id": 8,
    "title": "Refactoring: Improving the Design of Existing Code",
    "author": "Martin Fowler",
    "synopsis": "Teaches techniques to restructure existing code to improve readability, reduce complexity, and make software easier to maintain, with practical examples and case studies.",
    "borrowed": false
  }
]